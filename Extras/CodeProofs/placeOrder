#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/GitHub/JackrabbitRelay/Base/Library')
import os
import json

import JackrabbitRelay as JRR

def Usage():
    print('An exchange, account, asset, action, and amount are required.')
    print('If the last argument on the command line is RO, then a reduce only order is issued.')
    print()
    print('     placeOrder kraken MAIN BTC/USD buy 0.001')
    print('     placeOrder binance MAIN ADA/USDT buy 10 RO')
    sys.exit(1)

###
### Main code base. Place order on exchange
###

relay=JRR.JackrabbitRelay(Usage=Usage)
if relay.GetArgsLen() > 4:
    exchangeName=relay.GetExchange()
    account=relay.GetAccount()
    asset=relay.GetAsset()
    action=relay.GetArgs(4).lower()
    amount=float(relay.GetArgs(5))
else:
    Usage()

ro=(relay.GetArgs(-1).lower()=='ro')

ticker=relay.GetTicker(symbol=asset)
bPrice=ticker['Ask']
sPrice=ticker['Bid']

if action=='buy' and amount>0:
    mPrice=max(bPrice,sPrice)
elif action=='buy' and amount<0:
    mPrice=min(bPrice,sPrice)
elif action=='sell' and amount>0:
    mPrice=min(bPrice,sPrice)
elif action=='sell' and amount<0:
    mPrice=max(bPrice,sPrice)

result=relay.PlaceOrder(pair=asset,orderType="market",action=action,amount=amount,price=bPrice,ReduceOnly=ro,LedgerNote="CodeProofs/placeOrder")
print(result)
