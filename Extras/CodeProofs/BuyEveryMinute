#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/GitHub/JackrabbitRelay/Base/Library')
import os
import json
import time

import JRRsupport
import JackrabbitRelay as JRR

AssetList=['BTC/USD','ETH/USD','ADA/USD','LTC/USD','XRP/USD','TRX/USD','SOL/USD','DOGE/USD']

NewOrder={"Recipe":"BuyEveryMinute Conditional","Action":"Buy","Exchange":"mimic","Market":"spot","Account":"Kraken02","Asset":"TRX/USD","USD":"7","OrderType":"Market","Conditional":"Yes","Direction":"Long","SellAction":"Sell","TakeProfit":"1.5%","StopLoss":"1%" }

def PushOrder(NewOrder):
    try:
        relay=JRR.JackrabbitRelay(payload=json.dumps(NewOrder),NoIdentityVerification=True,RaiseError=True)
        relay.Order['Identity']=relay.Active['Identity']

        # Feed the new order to Relay
        result=relay.SendWebhook(relay.Order)
        oid=relay.GetOrderID(result)
        if oid!=None:
            bal=relay.GetBalance(Base=relay.Order['Asset'].split('/')[0])
            detail=relay.GetOrderDetails(id=oid,symbol=relay.Order['Asset'])
            print(f"{relay.Order['Asset']:10} {oid:>16} {round(detail['Price'],8):16.8f} {round(bal,8):16.8f}")
    except Exception as err:
        print(err)

###
### Main driver
###

def main():
#    while True:
        for asset in AssetList:
            NewOrder['Asset']=asset
            PushOrder(NewOrder)
#        JRRsupport.ElasticSleep(60)

if __name__ == '__main__':
    main()
