#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/GitHub/JackrabbitRelay/Base/Library')
import os
import time
import json
import random

import JRRsupport
import JackrabbitRelay as JRR

interceptor=JRRsupport.SignalInterceptor()
relay=None

def RandoSleeper(*args,**kwargs):
    try:
        relay=JRR.JackrabbitRelay(exchange=args[0],account=args[1],asset=args[2])
        ticker=relay.GetTicker(symbol=args[2])

        print(f"{os.getppid()}/{os.getpid()}: {interceptor.WhoAmI()} {args[2]} {ticker}")
    except Exception as e:
        print(f"{os.getppid()}/{os.getpid()}: {interceptor.WhoAmI()} {e}")

def main():
    relay=JRR.JackrabbitRelay()
    if relay.GetArgsLen() > 2:
        exchangeName=relay.GetExchange()
        account=relay.GetAccount()
    else:
        print("An exchange, (sub)account, and an asset must be provided.")
        sys.exit(1)

    print(f"Parent: {os.getpid()}, {interceptor.AnyTriggered()}")

    for asset in relay.GetMarkets():
        interceptor.StartProcess(RandoSleeper,args=[exchangeName,account,asset])

        while interceptor.GetChildren()>10:
            l=interceptor.GetChildren()
            #print(f"{asset}/{l} {interceptor.AnyTriggered()}")
            if l==0:
                break
            time.sleep(1)

    while True:
        l=interceptor.GetChildren()
        print(l,interceptor.AnyTriggered())
        if l==0:
            break
        time.sleep(1)

###
### Main driver
###

if __name__=='__main__':
    main()

###
### End
###

