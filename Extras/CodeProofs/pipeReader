#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/GitHub/JackrabbitRelay/Base/Library')
import os
import json
import time
import multiprocessing
import subprocess

import JRRsupport

pipeWriter='/home/GitHub/JackrabbitRelay/Extras/CodeProofs/pipeWriter'

def compareCounter(node,dz):
    d2=json.loads(node.GetData())['Counter']
    d1=json.loads(dz)['Counter']

    if d1<d2:
        return -1
    elif d1>d2:
        return 1
    else: #if intd1==str(d2):
        return 0

def ProcessResults(result):
    pData=pList.find(json.dumps(result))
    pData.SetData(json.dumps(result))

def ProcessData(data):
    transactor=[ pipeWriter ]
    subp=subprocess.Popen(transactor,stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    subp.stdin.write(data.encode())
    res=subp.communicate()[0].decode().strip()

    pData={}
    pData['Counter']=data
    pData['Result']=res
    return pData

pList=JRRsupport.DList(Compare=compareCounter)

def main():
    ProcessPool=multiprocessing.Pool(multiprocessing.cpu_count()*2)

    counter=1
#    while True:
    while counter<10000:
        data=str(counter)
        pData={}
        pData['Counter']=data
        pList.insert(json.dumps(pData))

        ProcessPool.apply_async(ProcessData,args=(data,),callback=ProcessResults)
        counter+=1

    # Clean up and shutdown
    ProcessPool.close()
    ProcessPool.join()

    cur=pList.GetHead()
    while cur!=None:
        print(cur.GetData())
        cur=cur.GetNext()

if __name__=='__main__':
    main()

"""
s=time.time()
fh=open("opData","r")
dList=JRRsupport.DList()
lines=fh.readlines()
for line in lines:
    dList.insert(line.strip())
fh.close()
for i in range(9000):
    dList.delete(dList.GetHead().GetData())
e=time.time()-s
print(f"dList(dup filter) took {e} seconds over {dList.Length()} lines")
"""
