#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/GitHub/JackrabbitRelay/Base/Library')
import os

import JackrabbitRelay as JRR

###
### Main code base. Place order on exchange
###

relay=JRR.JackrabbitRelay()
if relay.GetArgsLen() > 2:
    exchangeName=relay.GetExchange()
    account=relay.GetAccount()
else:
    print("An exchange and an account must be provided.")
    sys.exit(1)

markets=relay.Markets

if relay.GetFramework()=='ccxt':
    balances=relay.GetBalance()
    if balances!=None:
        coinList=balances['free']
        for coin in coinList:
            fre=float(balances['free'][coin])
            tot=float(balances['total'][coin])
            if fre>0.0 and tot>0.0:
                print(f"{coin:20} {fre:16.8f} {tot:16.8f}")

        if 'MarketType' in relay.Active \
        and relay.Active['MarketType'].lower()!='spot':
            positions=relay.GetPositions()
            if positions!=None:
                for pos in positions:
                    bal=float(pos['contracts'])
                    if bal==None:
                        bal=0.0
                    if bal!=0.0 and 'symbol' in pos:
                        val=float(pos['contractSize'])
                        side=pos['side']
                        if side==None:
                            side='unkn'
                        print(f"{pos['symbol']:20} {abs(bal):16.8f} {side:5} {val:16.8f}")
elif relay.GetFramework()=='oanda':
    balance=relay.GetBalance()
    if balance!=None:
        print(f"{'Balance':12} {balance:16.8f}")

        positions=relay.GetPositions()
        if positions!=None:
            for pos in positions:
                asset=pos['instrument'].replace('_','/')
                bal=relay.GetPositions(symbol=asset)
                if bal>=0:
                    side='long'
                else:
                    side='short'
                print(f"{asset:12} {abs(bal):16.8f} {side}")
