#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/JackrabbitRelay/Base/Library')
import os
import time
import datetime
import json
import plotly.express as px

import JRRconfig
import JRRlog
import JRRapi
import JRRsupport

###
### Main code base. 
###

if len(sys.argv) > 3:
    en=sys.argv[1]
    sa=sys.argv[2]
    asset=sys.argv[3].upper()
else:
    print("An exchange, a (sub)account, and an asset.")
    sys.exit(1)

fn=JRRconfig.LedgerDirectory+'/'+en+'.'+sa+'.ledger'
if not os.path.exists(fn):
    print("Ledger not found.")
    sys.exit(1)


xps=[]
run=[]
bal=0.0
counter=0

fh=open(fn,'r')
while True:
    line=fh.readline().strip()

    if not line:
        break

    data=json.loads(line)

    # Collect only if its the asset we want

    l=len(asset)
    p=data['Asset'][:l]+'/'
    a=asset+'/'

    if data['Asset']!=asset and p!=a:
        continue

    dt=data['DateTime']
    direction=data['Action'].lower()

    # General reference for all binance exchange ids
    if en.find('binance')>-1:
        cs=data['Exchange']+'COST'
        if data[cs]==None:
            continue
        close=float(data[cs])
    elif en=='kucoin':
        if data['kucoinCOST']==None:
            continue
        close=float(data['kucoinCOST'])
    elif en=='ftx':
        if data['ftxCOST']==None:
            continue
        close=float(data['ftxCOST'])
    else:
        print(en+' unsupported.')
        sys.exit(1)

    if direction!='buy' and direction!='sell':
        continue

    if direction=='buy':
        bal-=close
    if direction=='sell':
        bal+=close

    xps.append(dt)
    run.append(bal)
    counter+=1
fh.close()

if counter==0:
    sys.exit(0)

p=asset.replace(':','').replace('-','').replace('/','')
fn=JRRconfig.ChartsDirectory+'/'+en+'.'+sa+'.'+p+'.Transactions.html'
ts=en.upper()+' ('+sa+'): '+asset.lower()+', Transactions'
fig=px.line(x=xps,y=run)
fig.update_layout(xaxis_title="Date",yaxis_title="Profit/Loss")
fig.update_layout(title={"text":ts,"x":0.5,"xanchor":"center","yanchor":"top"})
fig.write_html(fn)

