#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/JackrabbitRelay/Base/Library')
import os
import time
import json

import JRRconfig
import JRRlog
import JRRapi
import JRRsupport

###
### Main code base.
###

if len(sys.argv) > 2:
    exchangeName=sys.argv[1].lower()
    account=sys.argv[2]
else:
    print("An exchange and a (sub)account must be provided.")
    sys.exit(1)

IsLog=False
if len(sys.argv) > 3:
    if sys.argv[3].lower()=='log':
        LogName=sys.argv[4]
        IsLog=True

keys=JRRsupport.ReadConfig(exchangeName,account)

CurrentKey=(os.getpid()%len(keys))
Active=keys[CurrentKey]

exchange=JRRapi.ExchangeLogin(exchangeName,Active,Notify=False)

if "Retry" in Active:
    RetryLimit=int(Active['Retry'])
else:
    RetryLimit=10

markets=GetMarkets(exchange,pair,RetryLimit,Notify=false):

done=False
retry=0
while not done:
    try:
        balance = exchange.fetch_balance()
    except Exception as e:
        if retry>=RetryLimit:
           JRRlog.ErrorLog("Fetch Markets",e)
        retry+=1
    else:
        done=True

if not IsLog:
    coinList=balance['total']
    for coin in coinList:
        bal=float(balance['total'][coin])

        if bal>0.0:
            print(f"{coin:12} {bal:12.8f}")

    if exchange.has['fetchPositions']:
        try:
            positions = exchange.fetch_positions()
            for pos in positions:
                bal=float(pos['contracts'])
                if bal>0.0:
                    print(f"{pos['symbol']:12} {bal:12.8f} {pos['side']:5}")
        except:
            pass
else:
    cnt=0
    Balance={}
    Balance['DateTime']=f'{time.time()}'

    coinList=balance['total']
    for coin in coinList:
        bal=float(balance['total'][coin])

        if bal>0.0:
            cnt+=1
            Balance[coin]=f'{bal:.8f}'

    if exchange.has['fetchPositions']:
        try:
            positions = exchange.fetch_positions()
            for pos in positions:
                bal=float(pos['contracts'])
                if bal>0.0:
                    cnt+=1
                    Balance[pos['symbol']]=f'{bal:.8f}'
        except:
            pass

    # Write to file

    if cnt>0:
        fh=open(LogName,'a')
        fh.write(json.dumps(Balance)+"\n")
        fh.close()
