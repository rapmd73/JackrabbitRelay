#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Jackrabbit Relay
# 2021 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/JackrabbitRelay2/Base/Library')
import os
import time
import json

import JRRsupport

MimicData='/home/JackrabbitRelay2/Data/Mimic/'

###
### Main code base.
###

if len(sys.argv)<2:
    print("A Mimic account is required.")
    sys.exit(1)

account=sys.argv[1]
acn=f'{MimicData}{account}.history'
if not os.path.exists(acn):
    print('Please verify wallet name and case')
    sys.exit(1)

lines=JRRsupport.ReadFile(acn).strip().split('\n')

fees={}
Wallet={}

for line in lines:
    if line=='':
        continue

    try:
        data=json.loads(line)
    except:
        print("Line damaged:")
        print(f"  {line}")
        sys.exit(1)

    asset=data['Asset']
    f=float(data['Fee'])

    if data['Asset'] not in Wallet:
        Wallet[data['Asset']]=[]
    if data['Asset'] not in fees:
        fees[data['Asset']]=0

    fees[data['Asset']]+=f

    Wallet[data['Asset']].append(line)

for pair in sorted(Wallet.keys()):
    if len(sys.argv)>2 and sys.argv[2]!=pair:
        continue

    print(f"{pair}: {fees[pair]:.8f} paid in fees")

    # This will become the initial balance of the wallet.
    balance=0

    # Scan thie current pair
    for line in Wallet[pair]:
        try:
            data=json.loads(line)
        except:
            print("Line damaged:")
            print(f"  {line}")
            sys.exit(1)

        asset=data['Asset']
        base,quote=asset.split('/')
        if ':' in asset:
            quote=asset.split(':')[1]
            if '-' in quote:
                quote=quote.split('-')[0]

        dt=data['DateTime']
        act=data['Action'].upper()[0]
        bw=float(data[base])
        qw=float(data[quote])
        a=float(data['Amount'])
        p=float(data['Price'])
        f=float(data['Fee'])

        if balance==0:
            balance=qw+f+(abs(bw)*p)

        pnl=(qw+(abs(bw)*p))-balance
        """
        if act=='B':
            pnl=(qw+(abs(bw)*p)+f)-balance
        elif act=='S':
            pnl=(qw+(abs(bw)*p)+(abs(a)*p)+f)-balance
        """

        str=f"  {dt} {act} {bw:14.8f} {qw:14.8f} {a:14.8f} {p:.8f} {f:.8f} {pnl:.8f}"
        print(str)

    print()
